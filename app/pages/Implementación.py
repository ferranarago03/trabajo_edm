import pandas as pd
import streamlit as st
from nav import show_nav_menu
from pathlib import Path

APP_DIR = Path(__file__).resolve().parent.parent

st.set_page_config(
    page_title="VALEN FRESC | Implementaci칩n de la Idea",
    page_icon="游눠",
    layout="wide",
    initial_sidebar_state="collapsed",
)

st.markdown(
    """
    <style>
      /* Oculta la navegaci칩n autom치tica de p치ginas en el sidebar */
      [data-testid="stSidebarNav"] {
        display: none;
      }
    </style>
    """,
    unsafe_allow_html=True,
)

if "current_page_for_nav" not in st.session_state:
    st.session_state.current_page_for_nav = "Implementaci칩n de la Idea"

show_nav_menu(st.session_state.current_page_for_nav)


def load_main_app_css(file_name: str):
    css_path = APP_DIR / file_name
    if css_path.is_file():
        try:
            with open(css_path, encoding="utf-8") as f:
                st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)
        except Exception as e:
            st.error(f"Error al cargar CSS desde {css_path}: {e}")
    else:
        st.warning(
            f"Archivo CSS '{file_name}' no encontrado en {css_path}. Aseg칰rate de que est칠 en el directorio '{APP_DIR.name}'."
        )


load_main_app_css("styles.css")

# --- Sidebar ---
with st.sidebar:
    st.markdown("#### Recursos Externos")
    st.markdown(
        "- [OpenStreetMap](https://www.openstreetmap.org/)", unsafe_allow_html=True
    )
    st.markdown(
        "- [Datos abiertos de Valencia](https://valencia.opendatasoft.com/pages/home/)",
        unsafe_allow_html=True,
    )
    st.markdown(
        "- [Open Meteo API](https://open-meteo.com/)",
        unsafe_allow_html=True,
    )
    st.markdown("---")
    st.markdown("#### Autores")
    st.markdown(
        """
        - Ferran Arag칩 Ausina
        - Carles Navarro Esteve  
        - Aleixandre Tarras칩 Sorn칤
        """,
        unsafe_allow_html=True,
    )
    st.markdown("---")
    st.caption(f"춸 {pd.Timestamp.now().year} Planificador de Rutas | v1.0")
    st.caption("Movilidad Urbana Sostenible")
    st.markdown("---")


# --- Contenido Principal ---
st.header("Implementaci칩n de la Idea: Movilidad Urbana Inteligente en Valencia")

st.markdown("""
### Visi칩n del Proyecto
El proyecto tiene como objetivo mejorar la movilidad urbana, proporcionando opciones de rutas inteligentes, sostenibles y seguras. Est치 enfocado en promover m칠todos de transporte respetuosos con el entorno dentro de la ciudad y de promover rutas con gran cantidad de sombra y mostrar fuentes p칰blicas donde hidratarse durante el trayecto para luchar contra las altas temperaturas generadas por el cambio clim치tico.

### Caracter칤sticas Clave
* **Obtenci칩n de los datos**: 
    * Descarga de datos de OpenStreetMap (OSM) para Valencia. Obtenci칩n de los dos grafos (ruta en bicicleta o caminando) utilizados para el c치lculo de las rutas.
    * Descarga de datos abiertos de la ciudad de Valencia a trav칠s de la API de Open Data. De esta forma se han obtenido todas las fuentes p칰blicas de la ciudad as칤 como los 치rboles que hay en la ciudad para calcular las zonas con sombra.
            
        Tambi칠n se hace uso de este portal para obtener los datos de las estaciones de ValenBisi y poder saber cu치les de ellas son las m치s cercanas y tienen bicicletas y plazas disponibles. Este es un valor relativamente actual ya que se descarga en el momento de hacer la consulta y actualiz치ndose, desde la propia API, cada 10 minutos.
    * Descarga de los datos de temperatura a trav칠s de la API de Open Meteo. Estos datos se actualizan cada hora y permiten calcular la temperatura actual en Valencia para poder calcular el n칰mero de paradas que se deben hacer en las fuentes p칰blicas y la importacia de la sombra en la ruta.
* **C치lculo de los pesos por la sombra**: Para calcular la importancia de la sombra, se ha usado el dataset con los 치rboles de Valencia, junto con las proyecciones de los grafos. Para cada tramo del grafo (es decir, una arista entre dos nodos), se construye una zona de influencia de 15 metros alrededor del tramo. De esa manera, con un 칤ndice espacial, se consultan de manera eficiente todos los 치rboles situados dentro de la zona, asumiendo que, cuantos m치s 치rboles haya, tambi칠n habr치 m치s sombra. Para calcular los pesos del grafo, se definen distintos rangos de temperatura, de 5 en 5 grados y de 0 C췈 a 40 C췈.  Para cada diferente rango, se establecen diferentes pesos dependiendo de la importancia de la longitud o del n칰mero de 치rboles. A mayor temperatura, se le dar치 un poco m치s de importancia ir por una zona sombreada, sin embargo, a menor temperatura, se le dar치 m치s importancia a la longitud. La f칩rmula utilizada final es: (importancia_longitud * longitud) - (importancia_sombra * n칰mero de 치rboles) + 1000 (esta suma final se a침ade para garantizar que se den pesos positivos para no tener problemas con el algoritmo Dijkstra).
* **C치lculo de la ruta**:
    1. El primer paso consiste en obtener los nodos del grafo correspondiente que m치s cerca se encuentren del punto de inicio y del punto de destino, ya que se desea que la selecci칩n de estos puntos sea interactiva.
    2. A continuaci칩n, se calcula la ruta m치s corta entre estos dos nodos haciendo uso del algoritmo comentado anteriormente.
    3. En el caso de la ruta en bicicleta, adem치s de calcular la ruta m치s corta considerando solo las calles que permiten circular con bicicleta, se calcula la ruta caminando para llegar del punto de inicio al carril bici m치s cercano y del carril bici m치s cercano al punto de destino.
    4. Finalmente, para el ValenBisi, se realiza un proceso similar al de la bicicleta, pero se gu칤a, en primer lugar, a la estaci칩n de ValenBisi m치s cercana al punto de inicio y a la incorporaci칩n al carril bici, y, al final, se gu칤a a la estaci칩n de ValenBisi m치s cercana al punto de destino y la salida al carril bici. Es decir, se trata de no seleccionar las estaciones m치s cercanas a los puntos seleccionados, sino de tratar que est치s estaciones tambi칠n est칠n cerca del carril bici a utilizar, ya que, sino fuera as칤, tendr칤a que recorrer todo el tramo con la bicicleta sin utilizarla.  Ambas estaciones se seleccionan considerando la disponibilidad de bicicletas y plazas en el momento de la consulta.
* **Obtenci칩n de las fuentes p칰blicas**: Una vez calculada la ruta y su distancia total, se procede a obtener las fuentes p칰blicas que se encuentran a lo largo de la ruta. Para ello, se calcula el n칰mero de paradas que se aconsejar칤a realizar en funci칩n de la temperatura actual de Valencia y, con ello, la distancia que se debe recorrer entre cada parada. A partir de este valor, se va recorriendo la ruta y buscando, en la distancia correcta, las fuentes p칰blicas que se encuentren cerca de la ruta calculada.
* **Visualizaci칩n de los resultados**: Por 칰ltimo, se visulizan todos los resultados en un mapa interactivo realizado con Folium y presentado en la aplicaci칩n web con Streamlit. En este mapa se muestran las rutas calculadas y las fuentes p칰blicas, as칤 como la temperatura actual de Valencia, la distancia de la ruta o el n칰mero de paradas recomendadas.

### P칰blico Objetivo
Esta aplicaci칩n est치 pensada para:
* **Residentes de Valencia**: Personas que se desplazan diariamente y buscan opciones de transporte eficientes y sostenibles.
* **Turistas**: Visitantes que desean explorar Valencia a pie o en bicicleta.
* **Urbanistas**: Para analizar rutas populares e identificar 치reas de mejora en la infraestructura.

### Tecnolog칤as Utilizadas
* **Streamlit**: Para crear la aplicaci칩n web interactiva.
* **Folium**: Para visualizar datos geogr치ficos y mapas interactivos.
* **OSMnx**: Para descargar, construir, analizar y visualizar redes de calles desde OpenStreetMap.
* **Geopandas**: Para trabajar con datos geoespaciales y realizar an치lisis espaciales.
* **Python**: El lenguaje de programaci칩n principal.

### Futuras Extensiones
De cara al futuro se plantea la posibilidad de perfeccionar el c치lculo de las rutas mediante diversas l칤neas de mejora:
- **Integraci칩n de la altura de los edificios**: La recolecci칩n de los datos de altura de los edificios a partir de los catastros municipales permitir칤a calcular con mayor precisi칩n la sombra proyectada en cada tramo de la ciudad en funci칩n de la hora del d칤a. Esto contribuir칤a a ofrecer rutas a칰n m치s seguras y confortables durante episodios de temperaturas extremas.
- **Consideraci칩n de la humedad y otros factores t칠rmicos**: La incorporaci칩n de datos relativos a la humedad y a otros indicadores del confort t칠rmico, como la sensaci칩n t칠rmica, permitir칤a ajustar a칰n m치s los c치lculos de la cantidad de paradas recomendadas, pudiendo incluso consultar con expertos en climatolog칤a para definir mejor los rangos de temperatura y humedad que se consideran cr칤ticos para la salud y el bienestar de los usuarios.
- **An치lisis de elementos que influyen en el tiempo de desplazamiento**: Se propone integrar en el modelo la ubicaci칩n de sem치foros y otras zonas de detenci칩n obligada. Esto permitir칤a optimizar no solo la distancia y la exposici칩n al calor, sino tambi칠n el tiempo real de desplazamiento, ya que en algunos casos las paradas prolongadas podr칤an hacer que una ruta, a pesar de ser m치s corta, resulte menos eficiente.
""")
